export enum DIRECTIVE_T {
  /* 
    Call handler to process directive according to types
  */
  IGNORE,           /* ignore this line     */
  SINGLE_SYMBOL,    /* get single symbol    */
  MULTI_SYMBOL,     /* get multi symbol     */
}

export const directiveHash = new Map<string, DIRECTIVE_T>([
  /* tricore specific directives */
  [ "code16",            DIRECTIVE_T.IGNORE],
  [ "code32",            DIRECTIVE_T.IGNORE],
  [ "optim",             DIRECTIVE_T.IGNORE],
  [ "noopt",             DIRECTIVE_T.IGNORE],
  [ "word",              DIRECTIVE_T.IGNORE],
  [ "blcomm",            DIRECTIVE_T.SINGLE_SYMBOL],
  [ "toc",               DIRECTIVE_T.IGNORE],
  [ "rodata",            DIRECTIVE_T.IGNORE],
  [ "sdata",             DIRECTIVE_T.IGNORE],
  [ "sbss",              DIRECTIVE_T.IGNORE],
  [ "zdata",             DIRECTIVE_T.IGNORE],
  [ "zbss",              DIRECTIVE_T.IGNORE],
  [ "pcptext",           DIRECTIVE_T.IGNORE],
  [ "pcpdata",           DIRECTIVE_T.IGNORE],
  [ "pcpinitword",       DIRECTIVE_T.IGNORE],
  [ "bit",               DIRECTIVE_T.SINGLE_SYMBOL],
  [ "lbit",              DIRECTIVE_T.SINGLE_SYMBOL],
  [ "bpos",              DIRECTIVE_T.IGNORE],
  [ "bposb",             DIRECTIVE_T.IGNORE],
  [ "bposh",             DIRECTIVE_T.IGNORE],
  [ "bposw",             DIRECTIVE_T.IGNORE],
  [ "uahalf",            DIRECTIVE_T.IGNORE],
  [ "uaword",            DIRECTIVE_T.IGNORE],
  [ "uaxword",           DIRECTIVE_T.IGNORE],
  [ "file",              DIRECTIVE_T.IGNORE],
  [ "loc",               DIRECTIVE_T.IGNORE],
  [ "extern",            DIRECTIVE_T.SINGLE_SYMBOL],
  /* elf common directives */
  [ "comm",              DIRECTIVE_T.SINGLE_SYMBOL],
  [ "common",            DIRECTIVE_T.SINGLE_SYMBOL],
  [ "ident",             DIRECTIVE_T.IGNORE],
  [ "lcomm",             DIRECTIVE_T.SINGLE_SYMBOL],
  [ "local",             DIRECTIVE_T.MULTI_SYMBOL],
  [ "previous",          DIRECTIVE_T.IGNORE],
  [ "section",           DIRECTIVE_T.IGNORE],
  [ "section.s",         DIRECTIVE_T.IGNORE],
  [ "sect",              DIRECTIVE_T.IGNORE],
  [ "sect.s",            DIRECTIVE_T.IGNORE],
  [ "pushsection",       DIRECTIVE_T.IGNORE],
  [ "popsection",        DIRECTIVE_T.IGNORE],
  [ "size",              DIRECTIVE_T.IGNORE],
  [ "type",              DIRECTIVE_T.IGNORE],
  [ "version",           DIRECTIVE_T.IGNORE],
  [ "weak",              DIRECTIVE_T.MULTI_SYMBOL],
  [ "internal",          DIRECTIVE_T.IGNORE],
  [ "hidden",            DIRECTIVE_T.IGNORE],
  [ "protected",         DIRECTIVE_T.IGNORE],
  [ "line",              DIRECTIVE_T.IGNORE],
  [ "symver",            DIRECTIVE_T.IGNORE],
  [ "subsection",        DIRECTIVE_T.IGNORE],
  [ "vtable_inherit",    DIRECTIVE_T.IGNORE],
  [ "vtable_entry",      DIRECTIVE_T.IGNORE],
  [ "2byte",             DIRECTIVE_T.IGNORE],
  [ "4byte",             DIRECTIVE_T.IGNORE],
  [ "8byte",             DIRECTIVE_T.IGNORE],
  [ "loc_mark_labels",   DIRECTIVE_T.IGNORE],
  [ "offset",            DIRECTIVE_T.IGNORE],
  [ "struct",            DIRECTIVE_T.IGNORE],
  [ "text",              DIRECTIVE_T.IGNORE],
  [ "tls_common",        DIRECTIVE_T.SINGLE_SYMBOL],
  /* standard directives */
  [ "abort",             DIRECTIVE_T.IGNORE],
  [ "align",             DIRECTIVE_T.IGNORE],
  [ "altmacro",          DIRECTIVE_T.IGNORE],
  [ "ascii",             DIRECTIVE_T.IGNORE],
  [ "asciz",             DIRECTIVE_T.IGNORE],
  [ "balign",            DIRECTIVE_T.IGNORE],
  [ "balignw",           DIRECTIVE_T.IGNORE],
  [ "balignl",           DIRECTIVE_T.IGNORE],
  [ "bss",               DIRECTIVE_T.IGNORE],
  [ "byte",              DIRECTIVE_T.IGNORE],
  [ "common.s",          DIRECTIVE_T.SINGLE_SYMBOL],
  [ "data",              DIRECTIVE_T.IGNORE],
  [ "dc",                DIRECTIVE_T.IGNORE],
  [ "dc.a",              DIRECTIVE_T.IGNORE],
  [ "dc.b",              DIRECTIVE_T.IGNORE],
  [ "dc.d",              DIRECTIVE_T.IGNORE],
  [ "dc.l",              DIRECTIVE_T.IGNORE],
  [ "dc.s",              DIRECTIVE_T.IGNORE],
  [ "dc.w",              DIRECTIVE_T.IGNORE],
  [ "dc.x",              DIRECTIVE_T.IGNORE],
  [ "dcb",               DIRECTIVE_T.IGNORE],
  [ "dcb.b",             DIRECTIVE_T.IGNORE],
  [ "dcb.d",             DIRECTIVE_T.IGNORE],
  [ "dcb.l",             DIRECTIVE_T.IGNORE],
  [ "dcb.s",             DIRECTIVE_T.IGNORE],
  [ "dcb.w",             DIRECTIVE_T.IGNORE],
  [ "dcb.x",             DIRECTIVE_T.IGNORE],
  [ "ds",                DIRECTIVE_T.IGNORE],
  [ "ds.b",              DIRECTIVE_T.IGNORE],
  [ "ds.d",              DIRECTIVE_T.IGNORE],
  [ "ds.l",              DIRECTIVE_T.IGNORE],
  [ "ds.p",              DIRECTIVE_T.IGNORE],
  [ "ds.s",              DIRECTIVE_T.IGNORE],
  [ "ds.w",              DIRECTIVE_T.IGNORE],
  [ "ds.x",              DIRECTIVE_T.IGNORE],
  [ "debug",             DIRECTIVE_T.IGNORE],
  [ "double",            DIRECTIVE_T.IGNORE],
  [ "eject",             DIRECTIVE_T.IGNORE],
  [ "else",              DIRECTIVE_T.IGNORE],
  [ "elsec",             DIRECTIVE_T.IGNORE],
  [ "elseif",            DIRECTIVE_T.IGNORE],
  [ "end",               DIRECTIVE_T.IGNORE],
  [ "endc",              DIRECTIVE_T.IGNORE],
  [ "endfunc",           DIRECTIVE_T.IGNORE],
  [ "endif",             DIRECTIVE_T.IGNORE],
  [ "endm",              DIRECTIVE_T.IGNORE],
  [ "endr",              DIRECTIVE_T.IGNORE],
  [ "equ",               DIRECTIVE_T.IGNORE],
  [ "equiv",             DIRECTIVE_T.IGNORE],
  [ "eqv",               DIRECTIVE_T.IGNORE],
  [ "err",               DIRECTIVE_T.IGNORE],
  [ "error",             DIRECTIVE_T.IGNORE],
  [ "exitm",             DIRECTIVE_T.IGNORE],
  [ "appfile",           DIRECTIVE_T.IGNORE],
  [ "appline",           DIRECTIVE_T.IGNORE],
  [ "fail",              DIRECTIVE_T.IGNORE],
  [ "fill",              DIRECTIVE_T.IGNORE],
  [ "float",             DIRECTIVE_T.IGNORE],
  [ "format",            DIRECTIVE_T.IGNORE],
  [ "func",              DIRECTIVE_T.IGNORE],
  [ "global",            DIRECTIVE_T.MULTI_SYMBOL],
  [ "globl",             DIRECTIVE_T.MULTI_SYMBOL],
  [ "gnu_attribute",     DIRECTIVE_T.IGNORE],
  [ "hword",             DIRECTIVE_T.IGNORE],
  [ "if",                DIRECTIVE_T.IGNORE],
  [ "ifb",               DIRECTIVE_T.IGNORE],
  [ "ifc",               DIRECTIVE_T.IGNORE],
  [ "ifdef",             DIRECTIVE_T.IGNORE],
  [ "ifeq",              DIRECTIVE_T.IGNORE],
  [ "ifeqs",             DIRECTIVE_T.IGNORE],
  [ "ifge",              DIRECTIVE_T.IGNORE],
  [ "ifgt",              DIRECTIVE_T.IGNORE],
  [ "ifle",              DIRECTIVE_T.IGNORE],
  [ "iflt",              DIRECTIVE_T.IGNORE],
  [ "ifnb",              DIRECTIVE_T.IGNORE],
  [ "ifnc",              DIRECTIVE_T.IGNORE],
  [ "ifndef",            DIRECTIVE_T.IGNORE],
  [ "ifne",              DIRECTIVE_T.IGNORE],
  [ "ifnes",             DIRECTIVE_T.IGNORE],
  [ "ifnotdef",          DIRECTIVE_T.IGNORE],
  [ "incbin",            DIRECTIVE_T.IGNORE],
  [ "include",           DIRECTIVE_T.IGNORE],
  [ "int",               DIRECTIVE_T.IGNORE],
  [ "irp",               DIRECTIVE_T.IGNORE],
  [ "irep",              DIRECTIVE_T.IGNORE],
  [ "irpc",              DIRECTIVE_T.IGNORE],
  [ "irepc",             DIRECTIVE_T.IGNORE],
  [ "lflags",            DIRECTIVE_T.IGNORE],
  [ "linefile",          DIRECTIVE_T.IGNORE],
  [ "linkonce",          DIRECTIVE_T.IGNORE],
  [ "list",              DIRECTIVE_T.IGNORE],
  [ "llen",              DIRECTIVE_T.IGNORE],
  [ "long",              DIRECTIVE_T.IGNORE],
  [ "lsym",              DIRECTIVE_T.IGNORE],
  [ "macro",             DIRECTIVE_T.IGNORE],
  [ "mexit",             DIRECTIVE_T.IGNORE],
  [ "mri",               DIRECTIVE_T.IGNORE],
  [ ".mri",              DIRECTIVE_T.IGNORE],
  [ "name",              DIRECTIVE_T.IGNORE],
  [ "noaltmacro",        DIRECTIVE_T.IGNORE],
  [ "noformat",          DIRECTIVE_T.IGNORE],
  [ "nolist",            DIRECTIVE_T.IGNORE],
  [ "nopage",            DIRECTIVE_T.IGNORE],
  [ "octa",              DIRECTIVE_T.IGNORE],
  [ "org",               DIRECTIVE_T.IGNORE],
  [ "p2align",           DIRECTIVE_T.IGNORE],
  [ "p2alignw",          DIRECTIVE_T.IGNORE],
  [ "p2alignl",          DIRECTIVE_T.IGNORE],
  [ "page",              DIRECTIVE_T.IGNORE],
  [ "plen",              DIRECTIVE_T.IGNORE],
  [ "print",             DIRECTIVE_T.IGNORE],
  [ "psize",             DIRECTIVE_T.IGNORE],
  [ "purgem",            DIRECTIVE_T.IGNORE],
  [ "quad",              DIRECTIVE_T.IGNORE],
  [ "reloc",             DIRECTIVE_T.IGNORE],
  [ "rep",               DIRECTIVE_T.IGNORE],
  [ "rept",              DIRECTIVE_T.IGNORE],
  [ "rva",               DIRECTIVE_T.IGNORE],
  [ "sbttl",             DIRECTIVE_T.IGNORE],
  [ "set",               DIRECTIVE_T.IGNORE],
  [ "short",             DIRECTIVE_T.IGNORE],
  [ "single",            DIRECTIVE_T.IGNORE],
  [ "space",             DIRECTIVE_T.IGNORE],
  [ "skip",              DIRECTIVE_T.IGNORE],
  [ "sleb128",           DIRECTIVE_T.IGNORE],
  [ "spc",               DIRECTIVE_T.IGNORE],
  [ "stabd",             DIRECTIVE_T.IGNORE],
  [ "stabn",             DIRECTIVE_T.IGNORE],
  [ "stabs",             DIRECTIVE_T.IGNORE],
  [ "string",            DIRECTIVE_T.IGNORE],
  [ "string8",           DIRECTIVE_T.IGNORE],
  [ "string16",          DIRECTIVE_T.IGNORE],
  [ "string32",          DIRECTIVE_T.IGNORE],
  [ "string64",          DIRECTIVE_T.IGNORE],
  [ "title",             DIRECTIVE_T.IGNORE],
  [ "ttl",               DIRECTIVE_T.IGNORE],
  [ "uleb128",           DIRECTIVE_T.IGNORE],
  [ "xcom",              DIRECTIVE_T.SINGLE_SYMBOL],
  [ "xdef",              DIRECTIVE_T.MULTI_SYMBOL],
  [ "xref",              DIRECTIVE_T.IGNORE],
  [ "xstabs",            DIRECTIVE_T.IGNORE],
  [ "warning",           DIRECTIVE_T.IGNORE],
  [ "weakref",           DIRECTIVE_T.SINGLE_SYMBOL],
  [ "zero",              DIRECTIVE_T.IGNORE],
  [ "this_GCC_requires_the_GNU_assembler",    DIRECTIVE_T.IGNORE],
  [ "this_gcc_requires_the_gnu_assembler",    DIRECTIVE_T.IGNORE],
]);